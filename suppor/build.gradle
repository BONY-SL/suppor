plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'org.suppor.p4_group_8_repo.application'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
    javafxVersion = '17.0.6'
    testfxVersion = '4.0.13-alpha'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainModule = 'org.suppor.p4_group_8_repo.application.suppor'
    mainClass = 'org.suppor.p4_group_8_repo.application.suppor.Main'
}

javafx {
    version = javafxVersion
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media']
}

dependencies {
    // Application dependencies
    implementation 'org.controlsfx:controlsfx:11.1.2'
    implementation 'com.dlsc.formsfx:formsfx-core:11.6.0'
    implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'
    implementation "org.openjfx:javafx-base:${javafxVersion}"
    implementation "org.openjfx:javafx-graphics:${javafxVersion}"
    implementation "org.openjfx:javafx-controls:${javafxVersion}"
    implementation "org.openjfx:javafx-fxml:${javafxVersion}"
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation ('org.junit.jupiter:junit-jupiter-api:5.10.0')
    implementation ('org.junit.jupiter:junit-jupiter-engine')

    // JUnit 5 dependencies for testing
    testImplementation "org.testfx:testfx-core:4.0.15-alpha"
    testImplementation "org.testfx:testfx-junit5:4.0.15-alpha"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    // TestFX dependencies for testing (JUnit5 integration)
    testImplementation "org.testfx:testfx-junit5:${testfxVersion}"
    testImplementation "org.testfx:testfx-core:${testfxVersion}"

    // JavaFX runtime dependencies for testing
    testRuntimeOnly "org.openjfx:javafx-base:${javafxVersion}"
    testRuntimeOnly "org.openjfx:javafx-graphics:${javafxVersion}"
    testRuntimeOnly "org.openjfx:javafx-controls:${javafxVersion}"
    testRuntimeOnly "org.openjfx:javafx-fxml:${javafxVersion}"
}


tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:unchecked"
}

test {
    useJUnitPlatform()
    jvmArgs += [
            '--module-path', configurations.testRuntimeClasspath.asPath,
            '--add-modules', 'ALL-MODULE-PATH',
            '--add-opens', 'org.suppor.p4_group_8_repo.application.suppor/org.suppor.p4_group_8_repo.application.suppor=ALL-UNNAMED'
    ]
}



tasks.register('modularTest', JavaExec) {
    group = 'verification'
    description = 'Run modular tests.'
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'org.junit.platform.console.ConsoleLauncher'
    args = [
            '--scan-classpath',
            '--details-theme=ascii'
    ]
    jvmArgs += [
            '--module-path', configurations.runtimeClasspath.asPath,
            '--add-modules', 'ALL-MODULE-PATH',
            '--add-opens', 'org.suppor.p4_group_8_repo.application.suppor/org.suppor.p4_group_8_repo.application.suppor=ALL-UNNAMED'
    ]
}


jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
    addExtraDependencies("javafx.controls", "javafx.fxml", "javafx.graphics")
}

jlinkZip {
    group = 'distribution'
}
